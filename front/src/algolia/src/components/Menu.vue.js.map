{"version":3,"file":"Menu.vue.js","sources":["../../../../src/components/Menu.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n      :send-event=\"state.sendEvent\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <span :class=\"suit('label')\">{{ item.label }}</span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"showShowMoreButton\"\n        :class=\"[suit('showMore'), !state.canToggleShowMore && suit('showMore', 'disabled')]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore()\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenu',\n  mixins: [\n    createSuitMixin({ name: 'Menu' }),\n    createWidgetMixin(\n      { connector: connectMenu },\n      {\n        $$widgetType: 'ais.menu',\n      }\n    ),\n    createPanelConsumerMixin(),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    // TODO: implement searchable in connector\n    // searchable: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: undefined,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    showShowMoreButton() {\n      return this.state.canRefine && this.showMore;\n    },\n  },\n};\n</script>\n"],"names":["render","name","mixins","createSuitMixin","createWidgetMixin","connector","connectMenu","$$widgetType","createPanelConsumerMixin","props","attribute","type","String","required","limit","Number","default","undefined","showMoreLimit","showMore","Boolean","sortBy","Array","Function","transformItems","computed","widgetParams","this","showShowMoreButton","state","canRefine"],"mappings":"8PAqDe,CAACA,uuCACdC,KAAM,UACNC,OAAQ,CACNC,EAAgB,CAAEF,KAAM,SACxBG,EACE,CAAEC,UAAWC,GACb,CACEC,aAAc,aAGlBC,KAEFC,MAAO,CACLC,UAAW,CACTC,KAAMC,OACNC,UAAU,GAOZC,MAAO,CACLH,KAAMI,OACNC,aAASC,GAEXC,cAAe,CACbP,KAAMI,OACNC,aAASC,GAEXE,SAAU,CACRR,KAAMS,QACNJ,SAAS,GAEXK,OAAQ,CACNV,KAAM,CAACW,MAAOC,UACdP,aAASC,GAEXO,eAAgB,CACdb,KAAMY,SACNP,aAASC,IAGbQ,SAAU,CACRC,8BACS,CACLhB,UAAWiB,KAAKjB,UAChBI,MAAOa,KAAKb,MACZK,SAAUQ,KAAKR,SACfD,cAAeS,KAAKT,cACpBG,OAAQM,KAAKN,OACbG,eAAgBG,KAAKH,iBAGzBI,qCACSD,KAAKE,MAAMC,WAAaH,KAAKR"}