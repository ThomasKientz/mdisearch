{"version":3,"file":"Index.js","sources":["../../../../src/components/Index.js"],"sourcesContent":["import { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport indexWidget from 'instantsearch.js/es/widgets/index/index';\nimport { renderCompat, getDefaultSlot } from '../util/vue-compat';\n\n// wrapped in a dummy function, since indexWidget doesn't render\nconst connectIndex = () => indexWidget;\n\nexport default {\n  name: 'AisIndex',\n  mixins: [\n    createSuitMixin({ name: 'Index' }),\n    createWidgetMixin(\n      { connector: connectIndex },\n      {\n        $$widgetType: 'ais.index',\n      }\n    ),\n  ],\n  provide() {\n    return {\n      // The widget is created & registered by widgetMixin, accessor is needed\n      // because provide is not reactive.\n      $_ais_getParentIndex: () => this.widget,\n    };\n  },\n  props: {\n    indexName: {\n      type: String,\n      required: true,\n    },\n    indexId: {\n      type: String,\n      required: false,\n    },\n  },\n  render: renderCompat(function(h) {\n    return h('div', {}, getDefaultSlot(this));\n  }),\n  computed: {\n    widgetParams() {\n      return {\n        indexName: this.indexName,\n        indexId: this.indexId,\n      };\n    },\n  },\n};\n"],"names":["name","mixins","createSuitMixin","createWidgetMixin","connector","indexWidget","$$widgetType","provide","$_ais_getParentIndex","this","widget","props","indexName","type","String","required","indexId","render","renderCompat","h","getDefaultSlot","computed","widgetParams"],"mappings":"wQAQe,CACbA,KAAM,WACNC,OAAQ,CACNC,EAAgB,CAAEF,KAAM,UACxBG,EACE,CAAEC,4BAPmBC,IAQrB,CACEC,aAAc,eAIpBC,oCACS,CAGLC,uCAA4BC,EAAKC,UAGrCC,MAAO,CACLC,UAAW,CACTC,KAAMC,OACNC,UAAU,GAEZC,QAAS,CACPH,KAAMC,OACNC,UAAU,IAGdE,OAAQC,EAAa,SAASC,UACrBA,EAAE,MAAO,GAAIC,EAAeX,SAErCY,SAAU,CACRC,8BACS,CACLV,UAAWH,KAAKG,UAChBI,QAASP,KAAKO"}