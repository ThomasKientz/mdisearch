{"version":3,"file":"Breadcrumb.vue.js","sources":["../../../../src/components/Breadcrumb.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li :class=\"[suit('item'), !state.items.length && suit('item', 'selected')]\">\n          <a\n            v-if=\"Boolean(state.items.length)\"\n            :href=\"state.createURL()\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine()\"\n          >\n            <slot name=\"rootLabel\">Home</slot>\n          </a>\n          <span v-else>\n            <slot name=\"rootLabel\">Home</slot>\n          </span>\n        </li>\n        <li\n          v-for=\"(item, index) in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), isLastItem(index) && suit('item', 'selected')]\"\n        >\n          <span\n            :class=\"suit('separator')\"\n            aria-hidden=\"true\"\n          >\n            <slot name=\"separator\">></slot>\n          </span>\n          <a\n            v-if=\"!isLastItem(index)\"\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >{{ item.label }}</a>\n          <span v-else>{{ item.label }}</span>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisBreadcrumb',\n  mixins: [\n    createWidgetMixin(\n      {\n        connector: connectBreadcrumb,\n      },\n      {\n        $$widgetType: 'ais.breadcrumb',\n      }\n    ),\n    createPanelConsumerMixin(),\n    createSuitMixin({ name: 'Breadcrumb' }),\n  ],\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    separator: {\n      type: String,\n      default: undefined,\n    },\n    rootPath: {\n      type: String,\n      default: undefined,\n    },\n    transformItems: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    isLastItem(index) {\n      return this.state.items.length - 1 === index;\n    },\n  },\n};\n</script>\n"],"names":["render","name","mixins","createWidgetMixin","connector","connectBreadcrumb","$$widgetType","createPanelConsumerMixin","createSuitMixin","props","attributes","type","Array","required","separator","String","default","undefined","rootPath","transformItems","Function","computed","widgetParams","this","methods","isLastItem","index","state","items","length"],"mappings":"oQAuDe,CAACA,4mCACdC,KAAM,gBACNC,OAAQ,CACNC,EACE,CACEC,UAAWC,GAEb,CACEC,aAAc,mBAGlBC,IACAC,EAAgB,CAAEP,KAAM,gBAE1BQ,MAAO,CACLC,WAAY,CACVC,KAAMC,MACNC,UAAU,GAEZC,UAAW,CACTH,KAAMI,OACNC,aAASC,GAEXC,SAAU,CACRP,KAAMI,OACNC,aAASC,GAEXE,eAAgB,CACdR,KAAMS,SACNJ,aAASC,IAGbI,SAAU,CACRC,8BACS,CACLZ,WAAYa,KAAKb,WACjBI,UAAWS,KAAKT,UAChBI,SAAUK,KAAKL,SACfC,eAAgBI,KAAKJ,kBAI3BK,QAAS,CACPC,oBAAWC,UACFH,KAAKI,MAAMC,MAAMC,OAAS,IAAMH"}