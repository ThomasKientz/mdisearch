{"version":3,"file":"unescape.js","sources":["../../../../src/util/unescape.js"],"sourcesContent":["/**\n * This implementation is taken from Lodash implementation.\n * See: https://github.com/lodash/lodash/blob/4.17.11-npm/unescape.js\n */\n\n/** Used to map HTML entities to characters. */\nconst htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n/** Used to match HTML entities and HTML characters. */\nconst reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\nconst reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nexport function unescape(string) {\n  return string && reHasEscapedHtml.test(string)\n    ? string.replace(reEscapedHtml, character => htmlUnescapes[character])\n    : string;\n}\n"],"names":["const","htmlUnescapes","reEscapedHtml","reHasEscapedHtml","RegExp","source","unescape","string","test","replace","character"],"mappings":"AAMAA,IAAMC,EAAgB,SACX,WACD,WACA,aACE,YACD,KAILC,EAAgB,4BAChBC,EAAmBC,OAAOF,EAAcG,QAqBvC,SAASC,EAASC,UAChBA,GAAUJ,EAAiBK,KAAKD,GACnCA,EAAOE,QAAQP,WAAeQ,UAAaT,EAAcS,KACzDH"}